#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Jan 13 10:37:11 2021


Class to read IceCube simulations generated by ARTS

@author: inderpreet
"""


import scipy.io
import numpy as np
import os
import glob
import matplotlib.pyplot as plt



class IceCube():   
    
    
    def __init__(self, filenames):
        
        if np.isscalar(filenames):
            print ('doing only one file')
            filenames = [filenames]
        self.mat = []
        for file in filenames:
            self.mat.append(scipy.io.loadmat(file))
            m = scipy.io.loadmat(file)
            
            if m["Tb"].shape[1] != m["iwp"].shape[0]:
                print (file)
            
        
    def get_data(self, parameter):    
        
        
        data = []
        for i in range(len(self.mat)):
            mat = self.mat[i]
            data.append(mat[parameter])
        return data
    
    @property
    def tb(self):
        
        tb = self.get_data('Tb')
        tb = np.concatenate(tb, axis = 1)
        return np.squeeze(tb)
    
    @property
    def iwp(self):
        
        iwp = self.get_data('iwp')
        iwp = np.concatenate(iwp, axis = 0)
        return np.concatenate(iwp)
    

    @property
    def lat(self):
        
        lat = self.get_data('lat')
        lat = np.concatenate(lat, axis = 0)
        return np.concatenate(lat)
        
    @property
    def icehabit(self):
        
        return self.get_data('icehabit')        
    
    @property
    def lsampling(self):
        
        return self.get_data('lsampling')

    @property
    def polratio(self):
        
        return self.get_data('polratio')   
    
    
    def pdf(self, bins = None, plot = True):
        
        tb = self.tb
        

        bins = np.arange(100, 300, 0.5)
        
        hist = np.histogram(tb, bins, density = True)
        
        if plot:
            
            fig, ax = plt.subplots(1,1, figsize = [8, 8])
            ax.plot(bins[:-1], hist[0])
            ax.set_yscale('log')
            ax.set_ylabel('PDF [#/K]')
            ax.set_xlabel('TB [K]')
            
        return hist
    



    
